a_1=eta*(KM+y)
b_1=Vm2c*(y+KM)+eta*KM*(y+KM)-Vm1c*y
c_1=-Vm1c*KM*y
delta_1<-b_1^2-4*a_1*c_1
P=(-b_1+delta_1^(1/2))/(2*a_1)
return(P)
}
S<-nleqslv(c(1e-6,1e-6),transport,jac=NULL)$x
Sin<-S[2]
P1<-c()
P1[1]<-pathway1(Sin,Vm0,Vm1r)
for (p1 in 2:(Path1_size-1)){
P1[p1]<-pathway1(P1[p1-1],Vm1r,Vm1r)
}
P2<-c()
pathway2<-function(z){
p1 <- Vm1r*P1[Path1_size-1]/(P1[Path1_size-1]+KM)-(Vm2r*z[1]/(z[1]+KM)+eta*z[1]+P_p2*S_c/V_c*(z[1]-z[2]))
p2 <- N_eq*P_p2*S_c/V_env*(z[1]-z[2])-beta*z[2]
c(p1,p2)
}
P2_sol<-nleqslv(c(1e-6,1e-6),pathway2,jac=NULL)$x
P2[1]<-P2_sol[1]
for (p2 in 2:(Path_size-Path1_size)){
P2[p2]<-pathway1(P2[p2-1],Vm2r,Vm2r)
}
Phi1r=0
Phi2r=0
Phi1r=Phi1r+(Vm0*Sin/(Sin+KM))/(Path_size/2)
for (p1 in 1:(Path1_size-1)){
Phi1r=Phi1r+(Vm1r*P1[p1]/(P1[p1]+KM))/(Path_size/2)
}
for (p2 in 1:(Path_size-Path1_size)){
Phi2r=Phi2r+(Vm2r*P2[p2]/(P2[p2]+KM))/(Path_size/2)
}
Phi_fit<-(Phi1r*PO1+Phi2r*PO2)-prot_cost*(Etot_conc+Etot_back)
N_eq=N_eq*Phi_fit/Phi_eq
}
print(N_eq)
print(S[1])
Se<-S[1]
P2_out<-P2_sol[2]
tab_S_eq[i]<-Se
#tab_Phi_eq[i,j]=Phi_fit#Control
for (j in 1:N_reso){
#j=150
E_tot_conc0=Etot_var[j]
E_tot_conc1<-Etot_var[j]
E_tot_conc2<-Etot_var[j]
Etot_conc<-Etot_var[j]*Path_size
kf_act<-kf*10^(-(Etot_conc+(Etot_back))/(E_basal))#+Etot_back
#kf_act<-kf
a<- (VTm*kf_act+kf_act*E_tot_conc0*kcat*(1+Se/KT))
b<- (VTm*(kr+kcat-Se*kf_act)+kf_act*kcat*E_tot_conc0*(KT+Se))
c<- -VTm*Se*(kr+kcat)
delta<-b^2-4*a*c
#First cellular concentration (substrate)
if(a==0){
S_conc_eq=0
}else{
S_conc_eq=(-b+delta^(1/2))/(2*a)
}
KM=(kcat+kr)/kf_act
Vm0=kcat*E_tot_conc0
Vm1=kcat*E_tot_conc1
Vm2=kcat*E_tot_conc2
#Phi1=mpfr(Vm0*S_conc_eq/(S_conc_eq+KM),120)
a_1=eta*(KM+S_conc_eq)
b_1=Vm1*(S_conc_eq+KM)+eta*KM*(S_conc_eq+KM)-Vm0*S_conc_eq
c_1=-Vm0*KM*S_conc_eq
delta_1<-b_1^2-4*a_1*c_1
P1_conc_eq<-c()
P1_conc_eq[1]=(-b_1+delta_1^(1/2))/(2*a_1)
for (p1 in 2:(Path1_size-1)){
a_11=eta*(KM+P1_conc_eq[p1-1])
b_11=Vm1*(P1_conc_eq[p1-1]+KM)+eta*KM*(P1_conc_eq[p1-1]+KM)-Vm1*P1_conc_eq[p1-1]
c_11=-Vm1*KM*P1_conc_eq[p1-1]
delta_11<-b_11^2-4*a_11*c_11
P1_conc_eq[p1]=(-b_11+delta_11^(1/2))/(2*a_11)
}
a_2=eta_p*(KM+P1_conc_eq[Path1_size-1])
b_2=Vm2*(P1_conc_eq[Path1_size-1]+KM)+(eta_p*KM-P_p2*S_c/V_c*P2_out)*(P1_conc_eq[Path1_size-1]+KM)-Vm1*P1_conc_eq[Path1_size-1]
c_2=-Vm1*KM*P1_conc_eq[Path1_size-1]-P_p2*S_c/V_c*P2_out*(P1_conc_eq[Path1_size-1]+KM)*KM
delta_2<-b_2^2-4*a_2*c_2
P2_conc_eq<-c()
P2_conc_eq[1]=(-b_2+delta_2^(1/2))/(2*a_2)
for (p2 in 2:(Path_size-Path1_size)){
a_22=eta*(KM+P2_conc_eq[p2-1])
b_22=Vm2*(P2_conc_eq[p2-1]+KM)+eta*KM*(P2_conc_eq[p2-1]+KM)-Vm2*P2_conc_eq[p2-1]
c_22=-Vm2*KM*P2_conc_eq[p2-1]
delta_22<-b_22^2-4*a_22*c_22
P2_conc_eq[p2]=(-b_22+delta_22^(1/2))/(2*a_22)
}
Phi1=0
Phi2=0
Phi1=Phi1+(Vm0*S_conc_eq/(S_conc_eq+KM))/(Path_size/2)
for (p1 in 1:(Path1_size-1)){
Phi1=Phi1+(Vm1*P1_conc_eq[p1]/(P1_conc_eq[p1]+KM))/(Path_size/2)
}
for (p2 in 1:(Path_size-Path1_size)){
Phi2=Phi2+(Vm2*P2_conc_eq[p2]/(P2_conc_eq[p2]+KM))/(Path_size/2)
}
#for (p1 in 1:Path_size){
#Phi1=Phi1+(Vm1*P1_conc_eq[p1]/(KM+P1_conc_eq[p1]))/Path_size
#}
#for (p2 in 1:Path_size){
#Phi2=Phi2+(Vm1*P2_conc_eq[p2]/(KM+P2_conc_eq[p2]))/Path_size
#}
if(as.numeric((Phi1*PO1+Phi2*PO2)-prot_cost*(Etot_conc+(Etot_back)))>0){
P_Phi_eq=as.numeric((Phi1*PO1+Phi2*PO2)-prot_cost*(Etot_conc+(Etot_back)))
}
else{
P_Phi_eq=0
}
if(N_eq>1){
fit=P_Phi_eq/Phi_fit-1
}
else{
fit=-100
}
tab_Phi_inv[i,j]=P_Phi_eq
fit_inv[i,j]=fit
}
}
list_fit_inv_S40_noperm_eta09[[p+length(P_p2_set)*(Enz-1)]]<-fit_inv
}
#for (Enz in 1:length(Etot_set)){
#Etot_conc=Etot_set[Enz]
for (p in 1:length(P_p2_set)){
P_p2=P_p2_set[p]
eta_p=eta+P_p2*S_c/V_c
PO1<-1
PO2<-1
if(PayOff>1){
PO1<-PayOff
}
else if (PayOff<1){
PO2<-1/PayOff
}
for (i in 1:N_reso){
#eta=eta_set[e]
#i=150
Etot0=Etot_var[i]
print(paste(i))
Etot1r=Etot_var[i]#Molar
Etot2r=Etot_var[i]#Molar
Etot_conc=Etot0*Path_size
#Intermediate constants
Vm0=kcat*Etot0
Vm1r=kcat*Etot1r
Vm2r=kcat*Etot2r
kfact=kf*10^(-(Etot_conc+Etot_back)/(E_basal))
KM=(kr+kcat)/kfact
#KM=(kr+kcat)/kf
N_eq=100
Phi_fit=0
P2_out=1
while((abs(Phi_fit-Phi_eq)/Phi_eq>10^-5) && N_eq>1){
transport<-function(x){
t1 <- alpha-beta*x[1]-V_c/V_env*N_eq*VTm*(x[1]-x[2])/(KT+(x[1]+x[2])+x[1]*x[2]/KT)
t2 <- VTm*(x[1]-x[2])/(KT+(x[1]+x[2])+x[1]*x[2]/KT)-Vm0*x[2]/(x[2]+KM)
c(t1,t2)
}
pathway1<-function(y,Vm1c,Vm2c){
a_1=eta*(KM+y)
b_1=Vm2c*(y+KM)+eta*KM*(y+KM)-Vm1c*y
c_1=-Vm1c*KM*y
delta_1<-b_1^2-4*a_1*c_1
P=(-b_1+delta_1^(1/2))/(2*a_1)
return(P)
}
S<-nleqslv(c(1e-6,1e-6),transport,jac=NULL)$x
Sin<-S[2]
P1<-c()
P1[1]<-pathway1(Sin,Vm0,Vm1r)
for (p1 in 2:(Path1_size-1)){
P1[p1]<-pathway1(P1[p1-1],Vm1r,Vm1r)
}
P2<-c()
pathway2<-function(z){
p1 <- Vm1r*P1[Path1_size-1]/(P1[Path1_size-1]+KM)-(Vm2r*z[1]/(z[1]+KM)+eta*z[1]+P_p2*S_c/V_c*(z[1]-z[2]))
p2 <- N_eq*P_p2*S_c/V_env*(z[1]-z[2])-beta*z[2]
c(p1,p2)
}
P2_sol<-nleqslv(c(1e-6,1e-6),pathway2,jac=NULL)$x
P2[1]<-P2_sol[1]
for (p2 in 2:(Path_size-Path1_size)){
P2[p2]<-pathway1(P2[p2-1],Vm2r,Vm2r)
}
Phi1r=0
Phi2r=0
Phi1r=Phi1r+(Vm0*Sin/(Sin+KM))/(Path_size/2)
for (p1 in 1:(Path1_size-1)){
Phi1r=Phi1r+(Vm1r*P1[p1]/(P1[p1]+KM))/(Path_size/2)
}
for (p2 in 1:(Path_size-Path1_size)){
Phi2r=Phi2r+(Vm2r*P2[p2]/(P2[p2]+KM))/(Path_size/2)
}
Phi_fit<-(Phi1r*PO1+Phi2r*PO2)-prot_cost*(Etot_conc+Etot_back)
N_eq=N_eq*Phi_fit/Phi_eq
}
print(N_eq)
print(S[1])
Se<-S[1]
P2_out<-P2_sol[2]
tab_S_eq[i]<-Se
#tab_Phi_eq[i,j]=Phi_fit#Control
for (j in 1:N_reso){
#j=150
E_tot_conc0=Etot_var[j]
E_tot_conc1<-Etot_var[j]
E_tot_conc2<-Etot_var[j]
Etot_conc<-Etot_var[j]*Path_size
kf_act<-kf*10^(-(Etot_conc+(Etot_back))/(E_basal))#+Etot_back
#kf_act<-kf
a<- (VTm*kf_act+kf_act*E_tot_conc0*kcat*(1+Se/KT))
b<- (VTm*(kr+kcat-Se*kf_act)+kf_act*kcat*E_tot_conc0*(KT+Se))
c<- -VTm*Se*(kr+kcat)
delta<-b^2-4*a*c
#First cellular concentration (substrate)
if(a==0){
S_conc_eq=0
}else{
S_conc_eq=(-b+delta^(1/2))/(2*a)
}
KM=(kcat+kr)/kf_act
Vm0=kcat*E_tot_conc0
Vm1=kcat*E_tot_conc1
Vm2=kcat*E_tot_conc2
#Phi1=mpfr(Vm0*S_conc_eq/(S_conc_eq+KM),120)
a_1=eta*(KM+S_conc_eq)
b_1=Vm1*(S_conc_eq+KM)+eta*KM*(S_conc_eq+KM)-Vm0*S_conc_eq
c_1=-Vm0*KM*S_conc_eq
delta_1<-b_1^2-4*a_1*c_1
P1_conc_eq<-c()
P1_conc_eq[1]=(-b_1+delta_1^(1/2))/(2*a_1)
for (p1 in 2:(Path1_size-1)){
a_11=eta*(KM+P1_conc_eq[p1-1])
b_11=Vm1*(P1_conc_eq[p1-1]+KM)+eta*KM*(P1_conc_eq[p1-1]+KM)-Vm1*P1_conc_eq[p1-1]
c_11=-Vm1*KM*P1_conc_eq[p1-1]
delta_11<-b_11^2-4*a_11*c_11
P1_conc_eq[p1]=(-b_11+delta_11^(1/2))/(2*a_11)
}
a_2=eta_p*(KM+P1_conc_eq[Path1_size-1])
b_2=Vm2*(P1_conc_eq[Path1_size-1]+KM)+(eta_p*KM-P_p2*S_c/V_c*P2_out)*(P1_conc_eq[Path1_size-1]+KM)-Vm1*P1_conc_eq[Path1_size-1]
c_2=-Vm1*KM*P1_conc_eq[Path1_size-1]-P_p2*S_c/V_c*P2_out*(P1_conc_eq[Path1_size-1]+KM)*KM
delta_2<-b_2^2-4*a_2*c_2
P2_conc_eq<-c()
P2_conc_eq[1]=(-b_2+delta_2^(1/2))/(2*a_2)
for (p2 in 2:(Path_size-Path1_size)){
a_22=eta*(KM+P2_conc_eq[p2-1])
b_22=Vm2*(P2_conc_eq[p2-1]+KM)+eta*KM*(P2_conc_eq[p2-1]+KM)-Vm2*P2_conc_eq[p2-1]
c_22=-Vm2*KM*P2_conc_eq[p2-1]
delta_22<-b_22^2-4*a_22*c_22
P2_conc_eq[p2]=(-b_22+delta_22^(1/2))/(2*a_22)
}
Phi1=0
Phi2=0
Phi1=Phi1+(Vm0*S_conc_eq/(S_conc_eq+KM))/(Path_size/2)
for (p1 in 1:(Path1_size-1)){
Phi1=Phi1+(Vm1*P1_conc_eq[p1]/(P1_conc_eq[p1]+KM))/(Path_size/2)
}
for (p2 in 1:(Path_size-Path1_size)){
Phi2=Phi2+(Vm2*P2_conc_eq[p2]/(P2_conc_eq[p2]+KM))/(Path_size/2)
}
#for (p1 in 1:Path_size){
#Phi1=Phi1+(Vm1*P1_conc_eq[p1]/(KM+P1_conc_eq[p1]))/Path_size
#}
#for (p2 in 1:Path_size){
#Phi2=Phi2+(Vm1*P2_conc_eq[p2]/(KM+P2_conc_eq[p2]))/Path_size
#}
if(as.numeric((Phi1*PO1+Phi2*PO2)-prot_cost*(Etot_conc+(Etot_back)))>0){
P_Phi_eq=as.numeric((Phi1*PO1+Phi2*PO2)-prot_cost*(Etot_conc+(Etot_back)))
}
else{
P_Phi_eq=0
}
if(N_eq>1){
fit=P_Phi_eq/Phi_fit-1
}
else{
fit=-100
}
tab_Phi_inv[i,j]=P_Phi_eq
fit_inv[i,j]=fit
}
}
list_fit_inv_S40_noperm_eta05[[p+length(P_p2_set)*(Enz-1)]]<-fit_inv
}
#Parameters
eta=10^-0.5
P_p2_set<-c(0)
#eta=eta_set[2]
#Adaptive dynamics constants
Phi_eq=10^-4
r_c=1e-5#dm
S_c=4*pi*r_c^2
V_c=4/3*pi*r_c^3#dm^3
beta=10^-3
alpha=10^-3
dl=2e-4#dm
V_env=dl^3
#Variables
Etot_var<-10^seq(-5.5,-4,length=N_reso)
#Outcome
tab_N_eq <- matrix(nrow=N_reso , ncol=N_reso)
tab_Phi_eq <- matrix(nrow=N_reso , ncol=N_reso)
tab_S_eq <- c()
tab_Sin_eq<-matrix(nrow=N_reso , ncol=N_reso)
tab_P1<-matrix(nrow=N_reso , ncol=N_reso)
tab_P2<-matrix(nrow=N_reso , ncol=N_reso)
tab_Phi_inv<-matrix(nrow=N_reso , ncol=N_reso)
Neq<-list()
Phi_c<-list()
S_eq<-list()
Sin_eq<-list()
P1_eq<-list()
P2_eq<-list()
fit_inv<-matrix(nrow=N_reso , ncol=N_reso)
list_fit_inv_S40_noperm_eta09<-list()
#Outcome
tab_N_eq <- matrix(nrow=N_reso , ncol=N_reso)
tab_Phi_eq <- matrix(nrow=N_reso , ncol=N_reso)
tab_S_eq <- c()
tab_Sin_eq<-matrix(nrow=N_reso , ncol=N_reso)
tab_P1<-matrix(nrow=N_reso , ncol=N_reso)
tab_Phi_inv<-matrix(nrow=N_reso , ncol=N_reso)
Neq<-list()
Phi_c<-list()
S_eq<-list()
Sin_eq<-list()
P1_eq<-list()
fit_inv<-matrix(nrow=N_reso , ncol=N_reso)
#Parameter set 1
PayOff<-PayOff_set[3]
Path_size=Path_size_set[3]
Path1_size=Path1_size=P1s_func(Pts=Path_size,ratio1_2=1/2)
Enz=1
#for (Enz in 1:length(Etot_set)){
#Etot_conc=Etot_set[Enz]
for (p in 1:length(P_p2_set)){
P_p2=P_p2_set[p]
eta_p=eta+P_p2*S_c/V_c
PO1<-1
PO2<-1
if(PayOff>1){
PO1<-PayOff
}
else if (PayOff<1){
PO2<-1/PayOff
}
for (i in 1:N_reso){
#eta=eta_set[e]
#i=150
Etot0=Etot_var[i]
print(paste(i))
Etot1r=Etot_var[i]#Molar
Etot2r=Etot_var[i]#Molar
Etot_conc=Etot0*Path_size
#Intermediate constants
Vm0=kcat*Etot0
Vm1r=kcat*Etot1r
Vm2r=kcat*Etot2r
kfact=kf*10^(-(Etot_conc+Etot_back)/(E_basal))
KM=(kr+kcat)/kfact
#KM=(kr+kcat)/kf
N_eq=100
Phi_fit=0
P2_out=1
while((abs(Phi_fit-Phi_eq)/Phi_eq>10^-8) && N_eq>1){
transport<-function(x){
t1 <- alpha-beta*x[1]-V_c/V_env*N_eq*VTm*(x[1]-x[2])/(KT+(x[1]+x[2])+x[1]*x[2]/KT)
t2 <- VTm*(x[1]-x[2])/(KT+(x[1]+x[2])+x[1]*x[2]/KT)-Vm0*x[2]/(x[2]+KM)
c(t1,t2)
}
pathway1<-function(y,Vm1c,Vm2c){
a_1=eta*(KM+y)
b_1=Vm2c*(y+KM)+eta*KM*(y+KM)-Vm1c*y
c_1=-Vm1c*KM*y
delta_1<-b_1^2-4*a_1*c_1
P=(-b_1+delta_1^(1/2))/(2*a_1)
return(P)
}
S<-nleqslv(c(1e-6,1e-6),transport,jac=NULL)$x
Sin<-S[2]
P1<-c()
P1[1]<-pathway1(Sin,Vm0,Vm1r)
for (p1 in 2:(Path1_size-1)){
P1[p1]<-pathway1(P1[p1-1],Vm1r,Vm1r)
}
P2<-c()
pathway2<-function(z){
p1 <- Vm1r*P1[Path1_size-1]/(P1[Path1_size-1]+KM)-(Vm2r*z[1]/(z[1]+KM)+eta*z[1]+P_p2*S_c/V_c*(z[1]-z[2]))
p2 <- N_eq*P_p2*S_c/V_env*(z[1]-z[2])-beta*z[2]
c(p1,p2)
}
P2_sol<-nleqslv(c(1e-6,1e-6),pathway2,jac=NULL)$x
P2[1]<-P2_sol[1]
for (p2 in 2:(Path_size-Path1_size)){
P2[p2]<-pathway1(P2[p2-1],Vm2r,Vm2r)
}
Phi1r=0
Phi2r=0
Phi1r=Phi1r+(Vm0*Sin/(Sin+KM))/(Path_size/2)
for (p1 in 1:(Path1_size-1)){
Phi1r=Phi1r+(Vm1r*P1[p1]/(P1[p1]+KM))/(Path_size/2)
}
for (p2 in 1:(Path_size-Path1_size)){
Phi2r=Phi2r+(Vm2r*P2[p2]/(P2[p2]+KM))/(Path_size/2)
}
Phi_fit<-(Phi1r*PO1+Phi2r*PO2)-prot_cost*(Etot_conc+Etot_back)
N_eq=N_eq*Phi_fit/Phi_eq
}
print(N_eq)
print(S[1])
print(P1)
print(P2)
Se<-S[1]
P2_out<-P2_sol[2]
tab_S_eq[i]<-Se
#tab_Phi_eq[i,j]=Phi_fit#Control
for (j in 1:N_reso){
#j=150
E_tot_conc0=Etot_var[j]
E_tot_conc1<-Etot_var[j]
E_tot_conc2<-Etot_var[j]
Etot_conc<-Etot_var[j]*Path_size
kf_act<-kf*10^(-(Etot_conc+(Etot_back))/(E_basal))#+Etot_back
#kf_act<-kf
a<- (VTm*kf_act+kf_act*E_tot_conc0*kcat*(1+Se/KT))
b<- (VTm*(kr+kcat-Se*kf_act)+kf_act*kcat*E_tot_conc0*(KT+Se))
c<- -VTm*Se*(kr+kcat)
delta<-b^2-4*a*c
#First cellular concentration (substrate)
if(a==0){
S_conc_eq=0
}else{
S_conc_eq=(-b+delta^(1/2))/(2*a)
}
KM=(kcat+kr)/kf_act
Vm0=kcat*E_tot_conc0
Vm1=kcat*E_tot_conc1
Vm2=kcat*E_tot_conc2
#Phi1=mpfr(Vm0*S_conc_eq/(S_conc_eq+KM),120)
a_1=eta*(KM+S_conc_eq)
b_1=Vm1*(S_conc_eq+KM)+eta*KM*(S_conc_eq+KM)-Vm0*S_conc_eq
c_1=-Vm0*KM*S_conc_eq
delta_1<-b_1^2-4*a_1*c_1
P1_conc_eq<-c()
P1_conc_eq[1]=(-b_1+delta_1^(1/2))/(2*a_1)
for (p1 in 2:(Path1_size-1)){
a_11=eta*(KM+P1_conc_eq[p1-1])
b_11=Vm1*(P1_conc_eq[p1-1]+KM)+eta*KM*(P1_conc_eq[p1-1]+KM)-Vm1*P1_conc_eq[p1-1]
c_11=-Vm1*KM*P1_conc_eq[p1-1]
delta_11<-b_11^2-4*a_11*c_11
P1_conc_eq[p1]=(-b_11+delta_11^(1/2))/(2*a_11)
}
a_2=eta_p*(KM+P1_conc_eq[Path1_size-1])
b_2=Vm2*(P1_conc_eq[Path1_size-1]+KM)+(eta_p*KM-P_p2*S_c/V_c*P2_out)*(P1_conc_eq[Path1_size-1]+KM)-Vm1*P1_conc_eq[Path1_size-1]
c_2=-Vm1*KM*P1_conc_eq[Path1_size-1]-P_p2*S_c/V_c*P2_out*(P1_conc_eq[Path1_size-1]+KM)*KM
delta_2<-b_2^2-4*a_2*c_2
P2_conc_eq<-c()
P2_conc_eq[1]=(-b_2+delta_2^(1/2))/(2*a_2)
for (p2 in 2:(Path_size-Path1_size)){
a_22=eta*(KM+P2_conc_eq[p2-1])
b_22=Vm2*(P2_conc_eq[p2-1]+KM)+eta*KM*(P2_conc_eq[p2-1]+KM)-Vm2*P2_conc_eq[p2-1]
c_22=-Vm2*KM*P2_conc_eq[p2-1]
delta_22<-b_22^2-4*a_22*c_22
P2_conc_eq[p2]=(-b_22+delta_22^(1/2))/(2*a_22)
}
Phi1=0
Phi2=0
Phi1=Phi1+(Vm0*S_conc_eq/(S_conc_eq+KM))/(Path_size/2)
for (p1 in 1:(Path1_size-1)){
Phi1=Phi1+(Vm1*P1_conc_eq[p1]/(P1_conc_eq[p1]+KM))/(Path_size/2)
}
for (p2 in 1:(Path_size-Path1_size)){
Phi2=Phi2+(Vm2*P2_conc_eq[p2]/(P2_conc_eq[p2]+KM))/(Path_size/2)
}
#for (p1 in 1:Path_size){
#Phi1=Phi1+(Vm1*P1_conc_eq[p1]/(KM+P1_conc_eq[p1]))/Path_size
#}
#for (p2 in 1:Path_size){
#Phi2=Phi2+(Vm1*P2_conc_eq[p2]/(KM+P2_conc_eq[p2]))/Path_size
#}
if(as.numeric((Phi1*PO1+Phi2*PO2)-prot_cost*(Etot_conc+(Etot_back)))>0){
P_Phi_eq=as.numeric((Phi1*PO1+Phi2*PO2)-prot_cost*(Etot_conc+(Etot_back)))
}
else{
P_Phi_eq=0
}
if(N_eq>1){
fit=P_Phi_eq/Phi_fit-1
}
else{
fit=-100
}
tab_Phi_inv[i,j]=P_Phi_eq
fit_inv[i,j]=fit
}
}
list_fit_inv_S40_noperm_eta09[[p+length(P_p2_set)*(Enz-1)]]<-fit_inv
}
KM
kcat+kr
2000/kf
kcat*Etot
kcat*10^-4.5
0.031622776601683798281*10^-4/(10^-4+0.0002)
0.031622776601683798281*10^-4/(10^-4+0.002)
0.031622776601683798281*10^-5.5/(10^-5.5+0.002)
4.9921067861165443168e-05/0.001505846504842085808
10^-5.5/10^-4
