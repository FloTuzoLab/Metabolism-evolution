PO1<-1
PO2<-1
if(PayOff>1){
PO1<-PayOff
}
else if (PayOff<1){
PO2<-1/PayOff
}
for (i in 1:N_reso){
#eta=eta_set[e]
#i=150
#i=10
#i=25
Etot0=10^-4
print(paste(i))
Etot1r=Etot_conc*f_var[i]#Molar
Etot2r=Etot_conc*(1-f_var[i])#Molar
#Intermediate constants
Vm0=kcat*Etot0
Vm1r=kcat*Etot1r
Vm2r=kcat*Etot2r
kfact=kf*10^(-(Etot1r*Path1_size+Etot2r*(Path_size-Path1_size)+Etot_back)/(E_basal))
KM=(kr+kcat)/kfact
#KM=(kr+kcat)/kf
N_eq=10
Phi_fit=0
P2_out=1
count=0
while((abs(Phi_fit-Phi_eq)/Phi_eq>10^-8) && N_eq>1){
transport<-function(x){
t1 <- alpha-beta*x[1]-V_c/V_env*N_eq*VTm*(x[1]-x[2])/(KT+(x[1]+x[2])+x[1]*x[2]/KT)
t2 <- VTm*(x[1]-x[2])/(KT+(x[1]+x[2])+x[1]*x[2]/KT)-Vm0*x[2]/(x[2]+KM)
c(t1,t2)
}
pathway1<-function(y,Vm1c,Vm2c){
a_1=eta*(KM+y)
b_1=Vm2c*(y+KM)+eta*KM*(y+KM)-Vm1c*y
c_1=-Vm1c*KM*y
delta_1<-b_1^2-4*a_1*c_1
P=(-b_1+delta_1^(1/2))/(2*a_1)
return(P)
}
S<-nleqslv(c(1e-6,1e-6),transport,jac=NULL)$x
Sin<-S[2]
P1<-c()
P1[1]<-pathway1(Sin,Vm0,Vm1r)
for (p1 in 2:(Path1_size-1)){
P1[p1]<-pathway1(P1[p1-1],Vm1r,Vm1r)
}
P2<-c()
pathway2<-function(z){
p1 <- Vm1r*P1[Path1_size-1]/(P1[Path1_size-1]+KM)-(Vm2r*z[1]/(z[1]+KM)+eta*z[1]+P_p2*S_c/V_c*(z[1]-z[2]))
p2 <- N_eq*P_p2*S_c/V_env*(z[1]-z[2])-beta*z[2]
c(p1,p2)
}
P2_sol<-nleqslv(c(1e-6,1e-6),pathway2,jac=NULL)$x
P2[1]<-P2_sol[1]
for (p2 in 2:(Path_size-Path1_size)){
P2[p2]<-pathway1(P2[p2-1],Vm2r,Vm2r)
}
Phi1r=0
Phi2r=0
Phi1r=Phi1r+(Vm0*Sin/(Sin+KM))/(Path_size)
for (p1 in 1:(Path1_size-1)){
Phi1r=Phi1r+(Vm1r*P1[p1]/(P1[p1]+KM))/(Path_size)
}
for (p2 in 1:(Path_size-Path1_size-1)){
Phi2r=Phi2r+(Vm2r*P2[p2]/(P2[p2]+KM))/(Path_size)
}
Phi_fit<-((Phi1r*PO1+Phi2r*PO2)-prot_cost*(Etot1r*Path1_size+Etot2r*(Path_size-Path1_size)+Etot_back))*Tox/(Tox+sum(P1)+sum(P2))
if(count<10){
if(Phi_fit>Phi_eq){
N_eq=(N_eq*2)
}
else{
N_eq=(N_eq-2)
}
}
else if(count<200){
N_eq=N_eq*Phi_fit/Phi_eq
}
else{
##print(paste(p,N_eq,N_eq_p))
if(Phi_fit>Phi_eq){
N_eq=(N_eq+1)
}
else{
N_eq=(N_eq-1)
}
if(N_eq_p2==N_eq){
break
}
}
if(count%%2==0){
N_eq_p2=N_eq
}
print(paste(i,N_eq))
count=count+1
}
Se<-S[1]
P2_out<-P2_sol[2]
tab_S_eq[i]<-Se
tab_P2_eq[i]<-P2_out
#tab_Phi_eq[i,j]=Phi_fit#Control
Pop_DA[i]<-N_eq
for (j in 1:N_reso){
#j=150
#j=20
E_tot_conc0=10^-4
E_tot_conc1<-Etot_conc*f_var[j]
E_tot_conc2<-Etot_conc*(1-f_var[j])
kf_act<-kf*10^(-((E_tot_conc1*Path1_size+E_tot_conc2*(Path_size-Path1_size))+(Etot_back))/(E_basal))#+Etot_back
#kf_act<-kf
a<- (VTm*kf_act+kf_act*E_tot_conc0*kcat*(1+Se/KT))
b<- (VTm*(kr+kcat-Se*kf_act)+kf_act*kcat*E_tot_conc0*(KT+Se))
c<- -VTm*Se*(kr+kcat)
delta<-b^2-4*a*c
#First cellular concentration (substrate)
if(a==0){
S_conc_eq=0
}else{
S_conc_eq=(-b+delta^(1/2))/(2*a)
}
KM=(kcat+kr)/kf_act
Vm0=kcat*E_tot_conc0
Vm1=kcat*E_tot_conc1
Vm2=kcat*E_tot_conc2
#Phi1=mpfr(Vm0*S_conc_eq/(S_conc_eq+KM),120)
a_1=eta*(KM+S_conc_eq)
b_1=Vm1*(S_conc_eq+KM)+eta*KM*(S_conc_eq+KM)-Vm0*S_conc_eq
c_1=-Vm0*KM*S_conc_eq
delta_1<-b_1^2-4*a_1*c_1
P1_conc_eq<-c()
P1_conc_eq[1]=(-b_1+delta_1^(1/2))/(2*a_1)
for (p1 in 2:(Path1_size-1)){
a_11=eta*(KM+P1_conc_eq[p1-1])
b_11=Vm1*(P1_conc_eq[p1-1]+KM)+eta*KM*(P1_conc_eq[p1-1]+KM)-Vm1*P1_conc_eq[p1-1]
c_11=-Vm1*KM*P1_conc_eq[p1-1]
delta_11<-b_11^2-4*a_11*c_11
P1_conc_eq[p1]=(-b_11+delta_11^(1/2))/(2*a_11)
}
a_2=eta_p*(KM+P1_conc_eq[Path1_size-1])
b_2=Vm2*(P1_conc_eq[Path1_size-1]+KM)+(eta_p*KM-P_p2*S_c/V_c*P2_out)*(P1_conc_eq[Path1_size-1]+KM)-Vm1*P1_conc_eq[Path1_size-1]
c_2=-Vm1*KM*P1_conc_eq[Path1_size-1]-P_p2*S_c/V_c*P2_out*(P1_conc_eq[Path1_size-1]+KM)*KM
delta_2<-b_2^2-4*a_2*c_2
P2_conc_eq<-c()
P2_conc_eq[1]=(-b_2+delta_2^(1/2))/(2*a_2)
for (p2 in 2:(Path_size-Path1_size)){
a_22=eta*(KM+P2_conc_eq[p2-1])
b_22=Vm2*(P2_conc_eq[p2-1]+KM)+eta*KM*(P2_conc_eq[p2-1]+KM)-Vm2*P2_conc_eq[p2-1]
c_22=-Vm2*KM*P2_conc_eq[p2-1]
delta_22<-b_22^2-4*a_22*c_22
P2_conc_eq[p2]=(-b_22+delta_22^(1/2))/(2*a_22)
}
Phi1=0
Phi2=0
Phi1=Phi1+(Vm0*S_conc_eq/(S_conc_eq+KM))/(Path_size)
for (p1 in 1:(Path1_size-1)){
Phi1=Phi1+(Vm1*P1_conc_eq[p1]/(P1_conc_eq[p1]+KM))/(Path_size)
}
for (p2 in 1:(Path_size-Path1_size-1)){
Phi2=Phi2+(Vm2*P2_conc_eq[p2]/(P2_conc_eq[p2]+KM))/(Path_size)
}
#for (p1 in 1:Path_size){
#Phi1=Phi1+(Vm1*P1_conc_eq[p1]/(KM+P1_conc_eq[p1]))/Path_size
#}
#for (p2 in 1:Path_size){
#Phi2=Phi2+(Vm1*P2_conc_eq[p2]/(KM+P2_conc_eq[p2]))/Path_size
#}
if(as.numeric((Phi1*PO1+Phi2*PO2)-prot_cost*((E_tot_conc1*Path1_size+E_tot_conc2*(Path_size-Path1_size))+(Etot_back)))>0){
P_Phi_eq=as.numeric(((Phi1*PO1+Phi2*PO2)-prot_cost*((E_tot_conc1*Path1_size+E_tot_conc2*(Path_size-Path1_size))+(Etot_back)))*Tox/(Tox+sum(P1_conc_eq)+sum(P2_conc_eq)))
}
else{
P_Phi_eq=0
}
if(N_eq>1){
fit=P_Phi_eq/Phi_fit-1
}
else{
fit=-100
}
tab_Phi_inv[i,j]=P_Phi_eq
fit_inv[i,j]=fit
}
}
list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]]<-fit_inv
}
}
ncol=800
jet.colors <- colorRampPalette("red","green")
#jet.colors <- colorRampPalette(c(rep("red",49),rep("green",49)))
palet<-jet.colors(ncol)
pal<-list(palet)
#jet.colors <- colorRampPalette(c(rep("red",49),rep("green",49)))
#"Moderately high permeability (1e-5)",
#palet<-jet.colors(2)
#pal<-list(palet)
Pop_DA1<-Pop_DA
multiplePlot("","","","",c(""),c("")
,ncol=800,f_var_print,f_var_print,list(list_fit_inv_S40ratvar_Y1_eta1[[1]]),
abs="resident (% invetsment in 1st pathway)",ord="mutant (% invetsment in 1st pathway)",scale=c(-80,80),lev=c(0),palette=pal,cextext=1,TEXT_to_Add=addtxt,
image=TRUE,pcex=1,subcex=1,labcex=1,axcex=0.75,globcex=0.5,legcex=1,contourlab=TRUE,meth="edge",contcex=0.5,colorkey="TRUE")
multiplePlot("","","","",c("",""),c("","","","","","","")
,ncol=800,f_var_print,f_var_print,list_fit_inv_S40ratvar_Y1_eta1,
abs="resident (% invetsment in 1st pathway)",ord="mutant (% invetsment in 1st pathway)",scale=c(-80,80),lev=c(0),palette=pal,cextext=1,TEXT_to_Add=addtxt,
image=TRUE,pcex=1,subcex=1,labcex=1,axcex=0.75,globcex=0.5,legcex=1,contourlab=TRUE,meth="edge",contcex=0.5,colorkey="TRUE")
multiplePlot("","","","",c("",""),c("","","","","","")
,ncol=800,f_var_print,f_var_print,list_fit_inv_S40ratvar_Y1_eta1,
abs="resident (% invetsment in 1st pathway)",ord="mutant (% invetsment in 1st pathway)",scale=c(-80,80),lev=c(0),palette=pal,cextext=1,TEXT_to_Add=addtxt,
image=TRUE,pcex=1,subcex=1,labcex=1,axcex=0.75,globcex=0.5,legcex=1,contourlab=TRUE,meth="edge",contcex=0.5,colorkey="TRUE")
multiplePlot("","","","",c("",""),c("","","","","","")
,ncol=800,f_var_print,f_var_print,list_fit_inv_S40ratvar_Y1_eta1,
abs="resident (% invetsment in 1st pathway)",ord="mutant (% invetsment in 1st pathway)",scale=c(-80,80),lev=c(0),palette=pal,cextext=1,TEXT_to_Add=addtxt,
image=TRUE,pcex=1,subcex=1,labcex=1,axcex=0.75,globcex=0.5,legcex=1,contourlab=TRUE,meth="edge",contcex=0.5,colorkey="COMMON")
multiplePlot("Deg. rate=","","Toxicity=","",c("",""),c("","","","","","")
,ncol=800,f_var_print,f_var_print,list_fit_inv_S40ratvar_Y1_eta1,
abs="resident (% invetsment in 1st pathway)",ord="mutant (% invetsment in 1st pathway)",scale=c(-80,80),lev=c(0),palette=pal,cextext=1,TEXT_to_Add=addtxt,
image=TRUE,pcex=1,subcex=1,labcex=1,axcex=0.75,globcex=0.5,legcex=1,contourlab=TRUE,meth="edge",contcex=0.5,colorkey="COMMON")
multiplePlot("Toxicity=","","Deg. rate=","",c("",""),c("","","","","","")
,ncol=800,f_var_print,f_var_print,list_fit_inv_S40ratvar_Y1_eta1,
abs="resident (% invetsment in 1st pathway)",ord="mutant (% invetsment in 1st pathway)",scale=c(-80,80),lev=c(0),palette=pal,cextext=1,TEXT_to_Add=addtxt,
image=TRUE,pcex=1,subcex=1,labcex=1,axcex=1.25,globcex=0.5,legcex=1,contourlab=TRUE,meth="edge",contcex=0.5,colorkey="COMMON")
multiplePlot("Toxicity=","","Deg. rate=","",c("",""),c("","","","","","")
,ncol=800,f_var_print,f_var_print,list_fit_inv_S40ratvar_Y1_eta1,
abs="resident (% invetsment in 1st pathway)",ord="mutant (% invetsment in 1st pathway)",scale=c(-80,80),lev=c(0),palette=pal,cextext=1,TEXT_to_Add=addtxt,
image=TRUE,pcex=1,subcex=1,labcex=1.25,axcex=0.75,globcex=0.5,legcex=1,contourlab=TRUE,meth="edge",contcex=0.5,colorkey="COMMON")
multiplePlot("Toxicity=","","Deg. rate=","",c("",""),c("","","","","","")
,ncol=800,f_var_print,f_var_print,list_fit_inv_S40ratvar_Y1_eta1,
abs="resident (% invetsment in 1st pathway)",ord="mutant (% invetsment in 1st pathway)",scale=c(-80,80),lev=c(0),palette=pal,cextext=1,TEXT_to_Add=addtxt,
image=TRUE,pcex=1,subcex=1,labcex=1.25,axcex=0.75,globcex=0.5,legcex=1,contourlab=TRUE,meth="edge",contcex=0.5,colorkey="COMMON")
multiplePlot("Toxicity=","","Deg. rate=","",c("High","Low"),c("1e-3.5","1e-3","1e-2.5","1e-2","1e-1.5","1e-1")
,ncol=800,f_var_print,f_var_print,list_fit_inv_S40ratvar_Y1_eta1,
abs="resident (% invetsment in 1st pathway)",ord="mutant (% invetsment in 1st pathway)",scale=c(-80,80),lev=c(0),palette=pal,cextext=1,TEXT_to_Add=addtxt,
image=TRUE,pcex=1,subcex=1,labcex=1.25,axcex=0.75,globcex=0.5,legcex=1,contourlab=TRUE,meth="edge",contcex=0.5,colorkey="COMMON")
multiplePlot("Toxicity=","","Deg. rate=","",c("High","Low"),c("1e-3.5","1e-3","1e-2.5","1e-2","1e-1.5","1e-1")
,ncol=800,f_var_print,f_var_print,list_fit_inv_S40ratvar_Y1_eta1,
abs="resident (% invetsment in 1st pathway)",ord="mutant (% invetsment in 1st pathway)",scale=c(-80,80),lev=c(0),palette=pal,cextext=1,TEXT_to_Add=addtxt,
image=TRUE,pcex=1,subcex=1,labcex=1.5,axcex=0.75,globcex=0.5,legcex=1,contourlab=TRUE,meth="edge",contcex=0.5,colorkey="COMMON")
multiplePlot("Toxicity=","","Deg. rate=","",c("High","Low"),c("1e-3.5","1e-3","1e-2.5","1e-2","1e-1.5","1e-1")
,ncol=800,f_var_print,f_var_print,list_fit_inv_S40ratvar_Y1_eta1,
abs="resident (% invetsment in 1st pathway)",ord="mutant (% invetsment in 1st pathway)",scale=c(-80,80),lev=c(0),palette=pal,cextext=1.5,TEXT_to_Add=addtxt,
image=TRUE,pcex=1,subcex=1,labcex=1.5,axcex=0.75,globcex=0.5,legcex=1,contourlab=TRUE,meth="edge",contcex=0.5,colorkey="COMMON")
dev.print(device = jpeg, file = "res-ToxDeg-2P.jpeg", , width = 2000*3,height=600*3,res=300,type="cairo")
dev.off()
Rep_opt_DA_Deg_S40_eta_sens<-list()
for (to in 1:length(Tox_set)){
Rep_opt_DA_Deg_S40_eta_sens[[tox]]<-c(0)
for (p in 1:length(eta_set)){
#print(p)
i=1
while(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i]==-100 && i<N_reso){
i=i+1
}
S_opt=0
print(i)
while (i<N_reso){
if(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i+1,i]>0 && list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i-1,i]>0){
print(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(rat-1)]][i,i])
S_opt=i
print(S_opt)
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]<-f_var[S_opt]
break
}
else if (i==N_reso-1){
if(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i+1,i]<0 && list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i+1]>0){
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]=1
i=i+1
break
}
else{
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]<-0
break
}
}
else{
i=i+1
}
}
}
}
Rep_opt_DA_Deg_S40_eta_sens<-list()
for (to in 1:length(Tox_set)){
Rep_opt_DA_Deg_S40_eta_sens[[to]]<-c(0)
for (p in 1:length(eta_set)){
#print(p)
i=1
while(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i]==-100 && i<N_reso){
i=i+1
}
S_opt=0
print(i)
while (i<N_reso){
if(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i+1,i]>0 && list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i-1,i]>0){
print(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(rat-1)]][i,i])
S_opt=i
print(S_opt)
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]<-f_var[S_opt]
break
}
else if (i==N_reso-1){
if(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i+1,i]<0 && list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i+1]>0){
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]=1
i=i+1
break
}
else{
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]<-0
break
}
}
else{
i=i+1
}
}
}
}
Rep_opt_DA_Deg_S40_eta_sens
Rep_opt_DA_Deg_S40_eta_sens<-list()
for (to in 1:length(Tox_set)){
for (p in 1:length(eta_set)){
if (Rep_opt_DA_Deg_S40_eta_sens[[to]][p]==0){
i=1
while(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i]==-100 && i<N_reso){
i=i+1
}
S_opt=0
print(i)
while (i<N_reso){
if(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i+1]<0 && list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i-1]<0){
print(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i])
S_opt=i
print(S_opt)
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]<-f_var[S_opt]
break
}
else if (i==N_reso-1){
if(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i+1,i]<0 && list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i+1]>0){
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]=1
i=i+1
break
}
else{
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]<-0
break
}
}
else{
i=i+1
}
}
}
}
}
Rep_opt_DA_Deg_S40_eta_sens<-list()
for (to in 1:length(Tox_set)){
Rep_opt_DA_Deg_S40_eta_sens[[to]]<-c(0)
for (p in 1:length(eta_set)){
#print(p)
i=1
while(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i]==-100 && i<N_reso){
i=i+1
}
S_opt=0
print(i)
while (i<N_reso){
if(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i+1,i]>0 && list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i-1,i]>0){
print(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(rat-1)]][i,i])
S_opt=i
print(S_opt)
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]<-f_var[S_opt]
break
}
else if (i==N_reso-1){
if(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i+1,i]<0 && list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i+1]>0){
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]=1
i=i+1
break
}
else{
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]<-0
break
}
}
else{
i=i+1
}
}
}
}
for (to in 1:length(Tox_set)){
for (p in 1:length(eta_set)){
if (Rep_opt_DA_Deg_S40_eta_sens[[to]][p]==0){
i=1
while(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i]==-100 && i<N_reso){
i=i+1
}
S_opt=0
print(i)
while (i<N_reso){
if(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i+1]<0 && list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i-1]<0){
print(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i])
S_opt=i
print(S_opt)
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]<-f_var[S_opt]
break
}
else if (i==N_reso-1){
if(list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i+1,i]<0 && list_fit_inv_S40ratvar_Y1_eta1[[p+length(eta_set)*(to-1)]][i,i+1]>0){
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]=1
i=i+1
break
}
else{
Rep_opt_DA_Deg_S40_eta_sens[[to]][p]<-0
break
}
}
else{
i=i+1
}
}
}
}
}
Rep_opt_DA_Deg_S40_eta_sens
par(mfrow=c(1,1))
plot(Rep_opt_DA_Degperm_S40_perm_eta1[[1]],col="blue",pch=19,ylim=c(0,1))
par(mfrow=c(1,1))
addtxt<-list(l=-1.6,h=-2.8,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
par(mfrow=c(1,1),mai=c(1,1.125,0.5,0.875))
for(to in 1:length(Tox_set)){
Tox_i<-as.character(Toxicity[to])
if (to==1){
plot(log10(Conc1_opt_DA_tox[[as.character(Tox_i)]])~log10(eta_set),col=1,pch=15,ylim=c(-5.2,-4.4),xlab="log10(Degradation rate)",ylab="(% invetsment in 1st pathway)")
}
else{
points(log10(Conc1_opt_DA_tox[[as.character(Tox_i)]])~log10(eta_set),col=to,pch=14+to)
}
}
par(mfrow=c(1,1))
addtxt<-list(l=-1.6,h=-2.8,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
par(mfrow=c(1,1),mai=c(1,1.125,0.5,0.875))
for(to in 1:length(Tox_set)){
Tox_i<-as.character(Toxicity[to])
if (to==1){
plot(Rep_opt_DA_Deg_S40_eta_sens[[1]]~log10(eta_set),col=1,pch=15,ylim=c(0,1),xlab="log10(Degradation rate)",ylab="(% invetsment in 1st pathway)")
}
else{
points(Rep_opt_DA_Deg_S40_eta_sens[[2]]~log10(eta_set),col=to,pch=14+to)
}
}
abline(h=0.5,col="dark grey",lty=4)
text(-3.5,1,"B",srt=addtxt$srt,font=2,col="black",cex=1)
text(-1,0.55,"50%",srt=addtxt$srt,font=1,col="black",cex=1)
text(-1.1,0.54,"50%",srt=addtxt$srt,font=1,col="black",cex=1)
par(mfrow=c(1,1))
addtxt<-list(l=-1.6,h=-2.8,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
par(mfrow=c(1,1),mai=c(1,1.125,0.5,0.875))
for(to in 1:length(Tox_set)){
Tox_i<-as.character(Toxicity[to])
if (to==1){
plot(Rep_opt_DA_Deg_S40_eta_sens[[1]]~log10(eta_set),col=1,pch=15,ylim=c(0,1),xlab="log10(Degradation rate)",ylab="(% invetsment in 1st pathway)")
}
else{
points(Rep_opt_DA_Deg_S40_eta_sens[[2]]~log10(eta_set),col=to,pch=14+to)
}
}
abline(h=0.5,col="dark grey",lty=4)
text(-3.5,1,"B",srt=addtxt$srt,font=2,col="black",cex=1)
text(-1.1,0.54,"50%",srt=addtxt$srt,font=1,col="black",cex=1)
legend("bottomright",title="Toxicity",legend=c("High","Low"),bty="y",pch=c(15:16),col=c(1:2),ncol=1,cex=0.7)
legend("bottomright",title="Toxicity",legend=c("High","Low"),bty="y",pch=c(15:16),col=c(1:2),ncol=1,cex=1)
par(mfrow=c(1,1))
addtxt<-list(l=-1.6,h=-2.8,txt=c("A","B","C","D","E","F","G","H","I"),srt = 0,font=2,col="black")
par(mfrow=c(1,1),mai=c(1,1.125,0.5,0.875))
for(to in 1:length(Tox_set)){
Tox_i<-as.character(Toxicity[to])
if (to==1){
plot(Rep_opt_DA_Deg_S40_eta_sens[[1]]~log10(eta_set),col=1,pch=15,ylim=c(0,1),xlab="log10(Degradation rate)",ylab="(% invetsment in 1st pathway)")
}
else{
points(Rep_opt_DA_Deg_S40_eta_sens[[2]]~log10(eta_set),col=to,pch=14+to)
}
}
abline(h=0.5,col="dark grey",lty=4)
text(-3.5,1,"B",srt=addtxt$srt,font=2,col="black",cex=1)
text(-1.1,0.54,"50%",srt=addtxt$srt,font=1,col="black",cex=1)
legend("bottomright",title="Toxicity",legend=c("High","Low"),bty="y",pch=c(15:16),col=c(1:2),ncol=1,cex=1)
setwd(dir="~")
setwd(dir="Desktop/Ongoing-projects/Cross-feeding/Figures-Paper/Figures")
abline(h=0.5,col="dark grey",lty=4)
text(-3.5,1,"B",srt=addtxt$srt,font=2,col="black",cex=1)
text(-1.1,0.54,"50%",srt=addtxt$srt,font=1,col="black",cex=1)
legend("bottomright",title="Toxicity",legend=c("High","Low"),bty="y",pch=c(15:16),col=c(1:2),ncol=1,cex=1)
setwd(dir="~")
setwd(dir="Desktop/Ongoing-projects/Cross-feeding/Figures-Paper/Figures")
dev.print(device = jpeg, file = "res-ToxDeg-2P.jpeg", , width = 560*3,height=475*3,res=300,type="cairo")
dev.off()
setwd(dir="~")
setwd(dir="Desktop/enzyme-evolution/ScriptsR_model")
source("AP2.RaphsonNewton_Long.R") #To find equilibrium for 2 variables problems
require(Rmpfr)
library(RColorBrewer)
library(lattice)
library(grid)
library(gridExtra)
library(ggplot2)
library(plot.matrix)
library(fields)
library(nleqslv)
setwd(dir="~")
setwd(dir="enzyme-evolution/ScriptsR_model")
